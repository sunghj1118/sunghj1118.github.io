{"version":3,"file":"component---src-pages-using-typescript-tsx-b5c2340e23ac8ebfafa2.js","mappings":"6LAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAA,IAAC,KACvDC,EAAI,SACJC,GACDF,EAAA,OACCH,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAA,UAAI,mBACcA,EAAAA,cAAA,SAAG,0BAErBA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,YAAe,0CAClCA,EAAAA,cAAA,YAAM,YAAe,qCACzCA,EAAAA,cAAA,YAAM,oBAAuB,MAEvCA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,cAAiB,oBACxDA,EAAAA,cAAA,YAAM,cAAiB,gBAAaA,EAAAA,cAAA,YAAM,YAAe,UAEnEA,EAAAA,cAAA,SAAG,gCAC4BA,EAAAA,cAAA,YAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,yFCtCX,MAAMC,EAAkBC,EAAAA,QAAOC,OAAMC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAbJ,CAAa,qCAK/BK,EAAML,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAVJ,CAAU,gFAOhBO,GAAUP,EAAAA,EAAAA,SAAOH,EAAAA,MAAKK,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAZJ,CAAY,oGAqB5B,MAVeQ,IACbtB,EAAAA,cAACa,EAAe,KACdb,EAAAA,cAACmB,EAAG,KACFnB,EAAAA,cAACqB,EAAO,CAACT,GAAG,KAAI,QAChBZ,EAAAA,cAACqB,EAAO,CAACT,GAAG,UAAS,SACrBZ,EAAAA,cAACqB,EAAO,CAACT,GAAG,SAAQ,UC3B1B,MAAMW,EAAOT,EAAAA,QAAOU,KAAIR,WAAA,CAAAC,YAAA,eAAAC,YAAA,eAAXJ,CAAW,mBAWxB,MAPeX,IAAA,IAAC,SAAEsB,GAAUtB,EAAA,OAC1BH,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACsB,EAAM,MACPtB,EAAAA,cAACuB,EAAI,KAAEE,GACN,C,+CC+BL,IAlCA,SAAYtB,GAAoC,IAADuB,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAE1B,EAAK,SAAEuB,GAAUtB,EAC3C,MAAM,KAAEK,IAASqB,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBF,GAAepB,EAAKuB,aAAaH,YACnDI,EAAgC,QAApBN,EAAGlB,EAAKuB,oBAAY,IAAAL,OAAA,EAAjBA,EAAmBxB,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQgC,EAAgB,GAAE9B,OAAW8B,IAAiB9B,GACtDF,EAAAA,cAAA,QAAMiC,KAAK,cAAcC,QAASJ,IAClC9B,EAAAA,cAAA,QAAMmC,SAAS,WAAWD,QAAShC,IACnCF,EAAAA,cAAA,QAAMmC,SAAS,iBAAiBD,QAASJ,IACzC9B,EAAAA,cAAA,QAAMmC,SAAS,UAAUD,QAAQ,YACjClC,EAAAA,cAAA,QAAMiC,KAAK,eAAeC,QAAQ,YAClClC,EAAAA,cAAA,QAAMiC,KAAK,kBAAkBC,SAA0B,QAAjBP,EAAAnB,EAAKuB,oBAAY,IAAAJ,OAAA,EAAjBA,EAAmBS,SAAW,KACpEpC,EAAAA,cAAA,QAAMiC,KAAK,gBAAgBC,QAAShC,IACpCF,EAAAA,cAAA,QAAMiC,KAAK,sBAAsBC,QAASJ,IACzCL,EAGP,C","sources":["webpack://my-blog/./src/pages/using-typescript.tsx","webpack://my-blog/./src/components/header.js","webpack://my-blog/./src/components/layout.js","webpack://my-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst HeaderContainer = styled.header`\n  background: #333;\n  padding: 1rem 0;\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst NavLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  margin: 0 1rem;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #ddd;\n  }\n`;\n\nconst Header = () => (\n  <HeaderContainer>\n    <Nav>\n      <NavLink to=\"/\">Home</NavLink>\n      <NavLink to=\"/about\">About</NavLink>\n      <NavLink to=\"/blog\">Blog</NavLink>\n    </Nav>\n  </HeaderContainer>\n);\n\nexport default Header;\n","import React from 'react';\nimport Header from './header';\nimport styled from 'styled-components';\nimport './layout.css';\n\nconst Main = styled.main`\n  padding: 2rem;\n`;\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <Main>{children}</Main>\n  </>\n);\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","HeaderContainer","styled","header","withConfig","displayName","componentId","Nav","nav","NavLink","Header","Main","main","children","_site$siteMetadata","_site$siteMetadata2","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}