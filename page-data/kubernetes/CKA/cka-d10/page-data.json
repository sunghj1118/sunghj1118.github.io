{"componentChunkName":"component---src-templates-blog-post-js","path":"/kubernetes/CKA/cka-d10/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"CKA 시험 준비 D10","date":"November 12, 2024"},"html":"<h1>CKA 시험 준비 D-10</h1>\n<p>두번째 모의고사를 풀면서 회고를 해보려 한다.</p>\n<h2>복기</h2>\n<ol>\n<li>etcd 클러스터 백업을 /opt/etcd-backup.db에 저장하라.</li>\n</ol>\n<pre><code class=\"language-bash\">export ETCDCTL_API=3\netcdctl snapshot save /opt/etcd-backup.db\n</code></pre>\n<p>이렇게만 하면 다음 오류가 뜬다.\n<code>Error: rpc error: code = Unavailable desc = transport is closing</code></p>\n<p>이유는 etcdctl을 실행할 때, etcd 서버의 endpoint를 지정해주지 않아서 그렇다.\n즉, etcd 서버의 endpoint를 지정해주어야 한다.</p>\n<pre><code class=\"language-bash\">ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 \\\n--cacert=/etc/kubernetes/pki/etcd/ca.crt \\ \n--cert=/etc/kubernetes/pki/etcd/server.crt \\ \n--key=/etc/kubernetes/pki/etcd/server.key \\ \nsnapshot save /opt/etcd-backup.db\n</code></pre>\n<p>이때, \\는 가독성을 위해 쓰인것이며, 실제 명령어를 실행할 때는 제거해야 한다.</p>\n<ol start=\"2\">\n<li>Create a Pod called redis-storage with image: redis:alpine with a Volume of type emptyDir that lasts for the life of the Pod.</li>\n</ol>\n<ul>\n<li>Pod named 'redis-storage' created</li>\n<li>Pod 'redis-storage' uses Volume type of emptyDir</li>\n<li>Pod 'redis-storage' uses volumeMount with mountPath = /data/redis</li>\n</ul>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: redis-storage\nspec:\n  container:\n  - name: redis-storage-container\n    image: redis:alpine\n    volumeMounts:\n      - mountPath: /data/redis\n        name: redis-volume\n  volumes:\n  - name: redis-volume\n    emptyDir:\n      sizeLimit: 500Mi\n</code></pre>\n<ol start=\"3\">\n<li>Create a new pod called super-user-pod with image busybox:1.28. Allow the pod to be able to set system_time.</li>\n</ol>\n<ul>\n<li>Pod: super-user-pod</li>\n<li>Container Image: busybox:1.28</li>\n<li>Is SYS_TIME capability set for the container?</li>\n</ul>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: super-user-pod\nspec:\n  containers:\n  - name: super-user-container\n    image: busybox:1.28\n    securityContext:\n      capabilities:\n        add: [\"SYS_TIME\"]\n    command: [\"sleep\", \"4800\"]\n</code></pre>\n<p>command는 복수형 commands가 아닌 command이다.</p>\n<ol start=\"4\">\n<li>A pod definition file is created at /root/CKA/use-pv.yaml. Make use of this manifest file and mount the persistent volume called pv-1. Ensure the pod is running and the PV is bound.</li>\n</ol>\n<ul>\n<li>mountPath: /data</li>\n<li>persistentVolumeClaim Name: my-pvc</li>\n</ul>\n<p>step 1: PV 생성</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 10Mi\n</code></pre>\n<p>step 2: Pod yaml 파일이 PVC를 사용하도록 수정</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: use-pv\n  name: use-pv\nspec:\n  containers:\n  - image: nginx\n    name: use-pv\n    resources: {}\n    volumeMounts:\n    - mountPath: /data\n      name: mypv\n  volumes:\n  - name: mypv\n    persistentVolumeClaim:\n      claimName: my-pvc\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: {}\n</code></pre>\n<ul>\n<li>volumeMounts와 volumes를 사용하여 PVC를 사용하도록 설정한다.</li>\n</ul>\n<p>2차 모의고사 처음으로 다 풀었다. 생각보다 더 어려웠다. D10이 남은만큼 이제 실제 출제된 문제들 위주로도 조금씩 외워야겠다.</p>"}},"pageContext":{"slug":"/kubernetes/CKA/cka-d10/"}},"staticQueryHashes":[],"slicesMap":{}}