{"componentChunkName":"component---src-templates-blog-post-js","path":"/kubernetes/CKA/cka-mock3/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"3차 모의고사 기출문제","date":"November 18, 2024"},"html":"<h1>2차 모의고사 기출문제</h1>\n<ol>\n<li>Create a new service account with the name pvviewer. Grant this Service account access to list all PersistentVolumes in the cluster by creating an appropriate cluster role called pvviewer-role and ClusterRoleBinding called pvviewer-role-binding.</li>\n</ol>\n<p>Next, create a pod called pvviewer with the image: redis and serviceAccount: pvviewer in the default namespace.</p>\n<ol start=\"2\">\n<li>List the InternalIP of all nodes of the cluster. Save the result to a file /root/CKA/node_ips.</li>\n</ol>\n<p>Answer should be in the format: InternalIP of controlplane<space>InternalIP of node01 (in a single line)</p>\n<ol start=\"3\">\n<li>Create a pod called multi-pod with two containers.</li>\n</ol>\n<p>Container 1: name: alpha, image: nginx\nContainer 2: name: beta, image: busybox, command: sleep 4800</p>\n<p>Environment Variables:\ncontainer 1:\nname: alpha</p>\n<p>Container 2:\nname: beta</p>\n<pre><code class=\"language-yaml\">---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: multi-pod\nspec:\n  containers:\n  - image: nginx\n    name: alpha\n    env:\n    - name: name\n      value: alpha\n  - image: busybox\n    name: beta\n    command: [\"sleep\", \"4800\"]\n    env:\n    - name: name\n      value: beta\n</code></pre>\n<ol start=\"4\">\n<li>Create a Pod called non-root-pod , image: redis:alpine</li>\n</ol>\n<ul>\n<li>runAsUser: 1000</li>\n<li>fsGroup: 2000</li>\n</ul>\n<ol start=\"5\">\n<li>We have deployed a new pod called np-test-1 and a service called np-test-service. Incoming connections to this service are not working. Troubleshoot and fix it.</li>\n</ol>\n<p>Create NetworkPolicy, by the name ingress-to-nptest that allows incoming connections to the service over port 80.</p>\n<p>Important: Don't delete any current objects deployed.</p>\n<pre><code class=\"language-yaml\">---\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: ingress-to-nptest\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      run: np-test-1\n  policyTypes:\n  - Ingress\n  ingress:\n  - ports:\n    - protocol: TCP\n      port: 80\n</code></pre>\n<ol start=\"6\">\n<li>Taint the worker node node01 to be Unschedulable. Once done, create a pod called dev-redis, image redis:alpine, to ensure workloads are not scheduled to this worker node. Finally, create a new pod called prod-redis and image: redis:alpine with toleration to be scheduled on node01.</li>\n</ol>\n<ul>\n<li>key: env_type, value: production, operator: Equal and effect: NoSchedule</li>\n</ul>\n<ol start=\"7\">\n<li>Create a pod called hr-pod in hr namespace belonging to the production environment and frontend tier .</li>\n</ol>\n<p>image: redis:alpine</p>\n<p>Use appropriate labels and create all the required objects if it does not exist in the system already.</p>\n<ul>\n<li><code>kubectl create namespace hr</code></li>\n<li><code>kubectl run hr-pod --image=redis:alpine --namespace=hr --labels=environment=production,tier=frontend</code></li>\n</ul>\n<ol start=\"8\">\n<li>A kubeconfig file called super.kubeconfig has been created under /root/CKA. There is something wrong with the configuration. Troubleshoot and fix it.</li>\n</ol>\n<p>Verify host and port for kube-apiserver are correct.</p>\n<p>Open the super.kubeconfig in vi editor.</p>\n<p>Change the 9999 port to 6443 and run the below command to verify:</p>\n<p><code>kubectl cluster-info --kubeconfig=/root/CKA/super.kubeconfig</code></p>\n<ol start=\"9\">\n<li>We have created a new deployment called nginx-deploy. scale the deployment to 3 replicas. Has the replica's increased? Troubleshoot the issue and fix it.</li>\n</ol>\n<p>Use the command kubectl scale to increase the replica count to 3.</p>\n<p><code>kubectl scale deploy nginx-deploy --replicas=3</code></p>\n<p>The controller-manager is responsible for scaling up pods of a replicaset. If you inspect the control plane components in the kube-system namespace, you will see that the controller-manager is not running.</p>\n<p><code>kubectl get pods -n kube-system</code></p>\n<p>The command running inside the controller-manager pod is incorrect.\nAfter fix all the values in the file and wait for controller-manager pod to restart.</p>\n<p>Alternatively, you can run sed command to change all values at once:</p>\n<p><code>sed -i 's/kube-contro1ler-manager/kube-controller-manager/g' /etc/kubernetes/manifests/kube-controller-manager.yaml</code></p>\n<p>This will fix the issues in controller-manager yaml file.</p>\n<p>At last, inspect the deployment by using below command:</p>\n<p><code>kubectl get deploy</code></p>\n<h2>마무리</h2>\n<p>시간도 부족하고 푸는 순서에 익숙해져야겠다. 이외에도 아직도 어려운 NetworkPolicy와 Taint, Tolerations, Jsonpath에 대해서는 각별히 더 주의해야겠다.</p>"}},"pageContext":{"slug":"/kubernetes/CKA/cka-mock3/"}},"staticQueryHashes":[],"slicesMap":{}}