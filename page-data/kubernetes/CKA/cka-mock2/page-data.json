{"componentChunkName":"component---src-templates-blog-post-js","path":"/kubernetes/CKA/cka-mock2/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"2차 모의고사 기출문제","date":"November 10, 2024"},"html":"<h1>2차 모의고사 기출문제</h1>\n<ol>\n<li>Take a backup of the etcd cluster and save it to /opt/etcd-backup.db.</li>\n</ol>\n<p><code>export ETCDCTL_API=3</code>\n<code>etcdctl snapshot save /opt/etcd-backup.db</code></p>\n<ol start=\"2\">\n<li>Create a Pod called redis-storage with image: redis:alpine with a Volume of type emptyDir that lasts for the life of the Pod.</li>\n</ol>\n<p>Specs on the below.</p>\n<ul>\n<li>Pod named 'redis-storage' created</li>\n<li>Pod 'redis-storage' uses Volume type of emptyDir</li>\n<li>Pod 'redis-storage' uses volumeMount with mountPath = /data/redis</li>\n</ul>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: redis-storage\nspec:\n  containers:\n  - name: redis-storage\n    image: redis:alpine\n    volumeMounts:\n      - mountPath: /data/redis\n        name: redis-storage-volume\n  volumes:\n  - name: redis-storage-volume\n    emptyDir: {}\n</code></pre>\n<ol start=\"3\">\n<li>Create a new pod called super-user-pod with image busybox:1.28. Allow the pod to be able to set system_time.</li>\n</ol>\n<p>The container should sleep for 4800 seconds.<br>\nPod: super-user-pod<br>\nContainer Image: busybox:1.28<br>\nIs SYS_TIME capability set for the container?</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: super-user-pod\nspec:\n  containers:\n  - name: super-user-container\n    image: busybox:1.28\n    command: [\"sleep\", \"4800\"]\n    securityContext:\n      capabilities:\n        add: [\"SYS_TIME\"]\n</code></pre>\n<ol start=\"4\">\n<li>A pod definition file is created at /root/CKA/use-pv.yaml. Make use of this manifest file and mount the persistent volume called pv-1. Ensure the pod is running and the PV is bound.</li>\n</ol>\n<p>mountPath: /data<br>\npersistentVolumeClaim Name: my-pvc<br>\npersistentVolume Claim configured correctly<br>\npod using the correct mountPath<br>\npod using the persistent volume claim?</p>\n<p>step1: create PVC to bind with PV</p>\n<p><code>vim pvc.yaml</code></p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 10Mi\n</code></pre>\n<p><code>kubectl apply -f pvc.yaml</code></p>\n<p>step2: edit existing pod yaml file to use PVC</p>\n<pre><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: use-pv\n  name: use-pv\nspec:\n  containers:\n  - image: nginx\n    name: use-pv\n    resources: {}\n    volumeMounts:\n    - mountPath: \"/data\"\n      name: mypd\n  volumes:\n  - name: mypd\n    persistentVolumeClaim:\n      claimName: my-pvc\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: {}\n</code></pre>\n<p><code>kubectl apply -f /root/CKA/use-pv.yaml</code></p>\n<p><code>kubectl get pvc my-pvc</code></p>\n<p><code>kubectl get pod use-pv</code></p>\n<h2>마무리</h2>\n<ul>\n<li>3번은 create service를 하는게 아니라 expose라는걸 써서 헷갈린다.</li>\n<li>ClusterIP가 default값이라서 생략해도 되는것 같다.</li>\n<li>같은 이름의 pod와 service를 만들때는 <code>kubectl run</code>으로 pod를 만들고 <code>--expose</code>로 service를 만들면 된다.</li>\n</ul>"}},"pageContext":{"slug":"/kubernetes/CKA/cka-mock2/"}},"staticQueryHashes":[],"slicesMap":{}}