{"version":3,"file":"component---src-pages-using-typescript-tsx-ea889810c5168378a80a.js","mappings":"6LAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAA,IAAC,KACvDC,EAAI,SACJC,GACDF,EAAA,OACCH,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAA,UAAI,mBACcA,EAAAA,cAAA,SAAG,0BAErBA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,YAAe,0CAClCA,EAAAA,cAAA,YAAM,YAAe,qCACzCA,EAAAA,cAAA,YAAM,oBAAuB,MAEvCA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,cAAiB,oBACxDA,EAAAA,cAAA,YAAM,cAAiB,gBAAaA,EAAAA,cAAA,YAAM,YAAe,UAEnEA,EAAAA,cAAA,SAAG,gCAC4BA,EAAAA,cAAA,YAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,GAAI,CAACC,GAAG,KAAI,2BACN,C,+CC3BX,IAXeT,IAAmB,IAAlB,SAAEU,GAAUV,EAC1B,OACEH,EAAAA,cAAA,WACEA,EAAAA,cAAA,cACEA,EAAAA,cAACW,EAAAA,GAAI,CAACC,GAAG,KAAI,SAEfZ,EAAAA,cAAA,YAAOa,GACH,C,+CCiCV,IAlCA,SAAYV,GAAoC,IAADW,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEd,EAAK,SAAEW,GAAUV,EAC3C,MAAM,KAAEK,IAASS,EAAAA,EAAAA,IAAe,YAc1BC,EAAkBF,GAAeR,EAAKW,aAAaH,YACnDI,EAAgC,QAApBN,EAAGN,EAAKW,oBAAY,IAAAL,OAAA,EAAjBA,EAAmBZ,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQoB,EAAgB,GAAElB,OAAWkB,IAAiBlB,GACtDF,EAAAA,cAAA,QAAMqB,KAAK,cAAcC,QAASJ,IAClClB,EAAAA,cAAA,QAAMuB,SAAS,WAAWD,QAASpB,IACnCF,EAAAA,cAAA,QAAMuB,SAAS,iBAAiBD,QAASJ,IACzClB,EAAAA,cAAA,QAAMuB,SAAS,UAAUD,QAAQ,YACjCtB,EAAAA,cAAA,QAAMqB,KAAK,eAAeC,QAAQ,YAClCtB,EAAAA,cAAA,QAAMqB,KAAK,kBAAkBC,SAA0B,QAAjBP,EAAAP,EAAKW,oBAAY,IAAAJ,OAAA,EAAjBA,EAAmBS,SAAW,KACpExB,EAAAA,cAAA,QAAMqB,KAAK,gBAAgBC,QAASpB,IACpCF,EAAAA,cAAA,QAAMqB,KAAK,sBAAsBC,QAASJ,IACzCL,EAGP,C","sources":["webpack://my-blog/./src/pages/using-typescript.tsx","webpack://my-blog/./src/components/layout.js","webpack://my-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  return (\n    <div>\n      <header>\n        <Link to=\"/\">Home</Link>\n      </header>\n      <main>{children}</main>\n    </div>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","children","_site$siteMetadata","_site$siteMetadata2","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}