{"version":3,"file":"component---src-pages-using-ssr-js-0a256579fb1dc534b31a.js","mappings":"yKAIA,MAAMA,EAAkBC,EAAAA,QAAOC,OAAMC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAbJ,CAAa,qCAK/BK,EAAML,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAVJ,CAAU,gFAOhBO,GAAUP,EAAAA,EAAAA,SAAOQ,EAAAA,MAAKN,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAZJ,CAAY,oGAqB5B,MAVeS,IACbC,EAAAA,cAACX,EAAe,KACdW,EAAAA,cAACL,EAAG,KACFK,EAAAA,cAACH,EAAO,CAACI,GAAG,KAAI,QAChBD,EAAAA,cAACH,EAAO,CAACI,GAAG,UAAS,SACrBD,EAAAA,cAACH,EAAO,CAACI,GAAG,SAAQ,UC3B1B,MAAMC,EAAOZ,EAAAA,QAAOa,KAAIX,WAAA,CAAAC,YAAA,eAAAC,YAAA,eAAXJ,CAAW,mBAWxB,MAPec,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC1BJ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACD,EAAM,MACPC,EAAAA,cAACE,EAAI,KAAEG,GACN,C,+CC+BL,IAlCA,SAAYD,GAAoC,IAADE,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEJ,GAAUD,EAC3C,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBG,MAExC,OACET,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQc,EAAgB,GAAEL,OAAWK,IAAiBL,GACtDT,EAAAA,cAAA,QAAMe,KAAK,cAAcC,QAASJ,IAClCZ,EAAAA,cAAA,QAAMiB,SAAS,WAAWD,QAASP,IACnCT,EAAAA,cAAA,QAAMiB,SAAS,iBAAiBD,QAASJ,IACzCZ,EAAAA,cAAA,QAAMiB,SAAS,UAAUD,QAAQ,YACjChB,EAAAA,cAAA,QAAMe,KAAK,eAAeC,QAAQ,YAClChB,EAAAA,cAAA,QAAMe,KAAK,kBAAkBC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBW,SAAW,KACpElB,EAAAA,cAAA,QAAMe,KAAK,gBAAgBC,QAASP,IACpCT,EAAAA,cAAA,QAAMe,KAAK,sBAAsBC,QAASJ,IACzCP,EAGP,C,6GCpCA,MA4Bac,EAAOA,IAAMnB,EAAAA,cAACoB,EAAAA,EAAG,CAACX,MAAM,cAErC,UA9BiBL,IAAqB,IAApB,WAAEiB,GAAYjB,EAC9B,OACEJ,EAAAA,cAACsB,EAAAA,EAAM,KACLtB,EAAAA,cAAA,UAAI,gBACWA,EAAAA,cAAA,SAAG,yBAElBA,EAAAA,cAAA,SAAG,mHAE4C,IAC7CA,EAAAA,cAAA,YAAM,yCAA4C,KAEpDA,EAAAA,cAAA,OACEuB,MAAO,CAAEC,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKN,EAAWO,UAElB5B,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAG6B,KAAK,oFAAmF,6CAEvF,KAGN7B,EAAAA,cAACF,EAAAA,KAAI,CAACG,GAAG,KAAI,2BACN,C","sources":["webpack://my-blog/./src/components/header.js","webpack://my-blog/./src/components/layout.js","webpack://my-blog/./src/components/seo.js","webpack://my-blog/./src/pages/using-ssr.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst HeaderContainer = styled.header`\n  background: #333;\n  padding: 1rem 0;\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst NavLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  margin: 0 1rem;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #ddd;\n  }\n`;\n\nconst Header = () => (\n  <HeaderContainer>\n    <Nav>\n      <NavLink to=\"/\">Home</NavLink>\n      <NavLink to=\"/about\">About</NavLink>\n      <NavLink to=\"/blog\">Blog</NavLink>\n    </Nav>\n  </HeaderContainer>\n);\n\nexport default Header;\n","import React from 'react';\nimport Header from './header';\nimport styled from 'styled-components';\nimport './layout.css';\n\nconst Main = styled.main`\n  padding: 2rem;\n`;\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <Main>{children}</Main>\n  </>\n);\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["HeaderContainer","styled","header","withConfig","displayName","componentId","Nav","nav","NavLink","Link","Header","React","to","Main","main","_ref","children","_site$siteMetadata","_site$siteMetadata2","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","Seo","serverData","Layout","style","width","borderRadius","alt","src","message","href"],"sourceRoot":""}